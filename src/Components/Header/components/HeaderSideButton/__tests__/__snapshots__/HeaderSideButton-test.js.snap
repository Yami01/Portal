// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderSideButton render with dot 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          undefined,
        ]
      }
      testID="touchableWrapperTestID"
    >
      <View
        style={
          Array [
            undefined,
            undefined,
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "position": "absolute",
          "right": -3,
          "top": -3,
          "zIndex": 10,
        },
        Object {
          "backgroundColor": "#ffffff",
          "borderRadius": 6,
          "borderWidth": 2,
          "height": 12,
          "width": 12,
        },
        Object {
          "backgroundColor": "#fff",
          "borderColor": "#098765",
        },
      ]
    }
    testID="dotTestID"
  />
</View>
`;

exports[`HeaderSideButton render with icon only 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          undefined,
        ]
      }
      testID="touchableWrapperTestID"
    >
      <View
        style={
          Array [
            undefined,
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`HeaderSideButton render with label and badge 1`] = `
<View>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        false,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          undefined,
        ]
      }
      testID="touchableWrapperTestID"
    >
      <Text
        style={
          Array [
            Object {
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "color": "#ffffff",
              "fontSize": 12,
              "marginRight": 5,
            },
          ]
        }
      >
        Updated today
      </Text>
      <View
        style={
          Array [
            undefined,
            undefined,
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "borderRadius": 7.5,
          "height": 15,
          "width": 15,
        },
        Object {
          "alignItems": "center",
          "backgroundColor": "#E14032",
          "justifyContent": "center",
        },
        Array [
          Object {
            "position": "absolute",
            "right": -3,
            "top": -3,
            "zIndex": 10,
          },
          Object {
            "backgroundColor": "#e10c0a",
            "borderColor": "#ffffff",
            "borderWidth": 1,
          },
        ],
      ]
    }
    testID="badgeTestID"
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Array [
            Object {
              "color": "#ffffff",
              "fontSize": 10,
            },
            undefined,
          ],
        ]
      }
    >
      1
    </Text>
  </View>
</View>
`;
